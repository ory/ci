name: 'Changelog'
description: 'Changelog generation action'
inputs:
  token:
    description: Personal access token
    default: ${{ github.token }}
    required: false

runs:
  using: "composite"
  steps:
    - run: |
        if [[ "$GITHUB_REF_TYPE" == "tag" ]]; then
          if [[ "$(git show -s --format=%B | head -n 1)" == "autogen"* ]]; then
            exit 0
          fi
        fi
      shell: bash
    - run: |
        git config --global user.email "60093411+ory-bot@users.noreply.github.com"
        git config --global user.name "ory-bot"
      shell: bash
    - run: |
        npm i -g conventional-changelog-cli@v2.1.1 doctoc@v1.4.0

        if [[ ! -e package.json ]]; then
          echo '{"private": true, "version": "0.0.0"}' > package.json
          git add package.json
        else
          echo "package.json exists and needs not be written"
        fi
      shell: bash
    - uses: actions/checkout@v2
      with:
        path: changelog
        repository: ory/changelog
        token: ${{ inputs.token }}
    - run: |
        (
          cd changelog
          npm i
        )

        npx conventional-changelog-cli@2.1.1 --config "changelog/index.js" -r 0 -u -o CHANGELOG.md
        rm -rf changelog/
      shell: bash
    - uses: ory/ci/prettier@master
      with:
        action: 'write'
    - uses: ory/ci/prettier@master
      with:
        action: 'check'
    - env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: |
        npx doctoc CHANGELOG.md
        sed -i "s/\*\*Table of Contents.*/**Table of Contents**/" CHANGELOG.md
        sed -i "s/\*This Change Log was.*/This Change Log was automatically generated/" CHANGELOG.md

        if [ -f package.json ]; then
          npm run format
        fi

        t=$(mktemp)
        printf "# Changelog\n\n" | cat - CHANGELOG.md > "$t" && mv "$t" CHANGELOG.md
      shell: bash
    - run: |
        echo "::set-output name=msg::$(git log --format=%B -n1)"
      shell: bash
      id: commit-msg
    - if: ${{ github.ref_type != 'tag' && !startsWith(steps.commit-msg.outputs.msg, 'autogen') }}
      run: |
        git commit -m "autogen(docs): regenerate and update changelog" || true
        git pull -ff || true
        git push origin HEAD:"$GITHUB_REF_NAME" || true
      shell: bash
    - if ${{ github.ref_type == 'tag' }}
      run: |
        git fetch origin
        git stash
        git checkout -b "changelog-$(date +"%m-%d-%Y")" origin/master
        git pull -ff
        git stash pop
        (
          git commit -m "autogen(docs): regenerate and update changelog" &&
          git pull -ff &&
          git push origin HEAD:master
        ) || true
      shell: bash
