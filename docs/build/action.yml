name: 'Docs Build'
description: 'Build and publish docs'
inputs:
  swag-spec-location:
    description: Location where the Swagger spec should be saved to
    default: .schema/api.swagger.json
    required: false
  swag-spec-ignore:
    description: Packages to ignore when generating the Swagger spec (space delimited).
    default: "internal/httpclient"
    required: false
  token:
    description: Personal access token
    default: ${{ github.token }}
    required: false

runs:
  using: "composite"
  steps:
    - uses: ory/ci/checkout@master
      with:
        path: current-repo
        fetch-depth: 0
        token: ${{ inputs.token }}
    - uses: actions/setup-go@v2
      with:
        go-version: 1.18
    - run: |
        git config --global user.email "60093411+ory-bot@users.noreply.github.com"
        git config --global user.name "ory-bot"
      shell: bash
    - run: echo 'GOPATH='"$(go env GOPATH)" >> $GITHUB_ENV
      shell: bash
    - run: |
        cd current-repo
        sudo apt install openjdk-11-jre-headless
        wget https://github.com/go-swagger/go-swagger/releases/latest/download/swagger_linux_amd64 \
          -O "$GOPATH/bin/swagger"
        chmod +x "$GOPATH/bin/swagger"

        bash <(curl https://raw.githubusercontent.com/ory/meta/master/install.sh) -b $GOPATH/bin ory

        make sdk
        (
          cd docs
          npm i
          npm run gen
          npm run build
          npm run format
        )
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        SWAG_SPEC_LOCATION: ${{ inputs.swag-spec-location }}
        SWAG_SPEC_IGNORE: ${{ inputs.swag-spec-ignore }}
    - run: |
        cd current-repo
        echo "::set-output name=msg::$(git log --format=%B -n1)"
      shell: bash
      id: commit-msg
    - env:
        GITHUB_TOKEN: ${{ inputs.token || github.token }}
      run: |
        cd current-repo
        branch="$(date +%s)"
        git checkout -b "$branch" || true
        git add -A || true
        git commit -a -m 'autogen(docs): generate and format documentation' -m '[skip ci]' || true
        git pull origin master --rebase || true
        git push origin HEAD:master || true
      shell: bash
    - uses: actions/checkout@v2
      with:
        repository: ory/web
        path: web
        fetch-depth: 0
        token: ${{ inputs.token }}
    - env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: |
        x=(${GITHUB_REPOSITORY//// })
        repo="${x[1]}"
        web_path="web/generated/docs/$repo"
        rm -rf "$web_path/*"
        mkdir -p "$web_path"
        cp -R current-repo/docs/build/* "$web_path"/
        cd web
        git add -A
        git stash || true
        git checkout master || true
        git stash pop || true
        git commit -a -m "autogen(docs): generate and bump docs for $repo" || true
        git pull origin master --rebase || true
        git push origin HEAD:master || true
      shell: bash

