name: 'Releaser'
description: 'Release automation action'
inputs:
  token:
    description: Personal access token
    required: false
    default: ${{ github.token }}
  goreleaser_key:
    description: GoReleaser Pro license key
    required: true
  cosign_pwd:
    description: Password to decrypt signing key
    required: true
  docker_username:
    description: Docker username
    required: true
  docker_password:
    description: Docker password
    required: true

runs:
  using: "composite"
  steps:
    - uses: ory/ci/checkout@master
      with:
        token: ${{ inputs.token }}
        fetch-depth: 0
    - uses: actions/setup-node@v2
      with:
        node-version: '16'
    - uses: actions/setup-go@v2
      with:
        go-version: 1.18
    - run: |
        git config --global user.email "60093411+ory-bot@users.noreply.github.com"
        git config --global user.name "ory-bot"
      shell: bash
    - run: echo 'GOPATH='"$(go env GOPATH)" >> $GITHUB_ENV
      shell: bash
    - run: |
        if [[ ! -e package.json ]]; then
          echo '{"private": true, "version": "0.0.0"}' > package.json
          git add package.json
        else
          echo "package.json exists and needs not be written"
        fi

        echo 'notes='"$(mktemp).md" >> $GITHUB_ENV
      shell: bash
    - run: |
        sudo apt install -y moreutils
      name: Install moreutils (for sponge)
      shell: bash
    - uses: actions/checkout@v2
      with:
        repository: ory/changelog
        path: changelog
        token: ${{ inputs.token }}

    - env:
        CURRENT_TAG: ${{ github.ref_name }}
      run: |
        npm --no-git-tag-version version "$CURRENT_TAG"

        (
          cd "$GITHUB_WORKSPACE/changelog";
          npm i
        )

        git fetch origin +refs/tags/*:refs/tags/*
        git fetch --unshallow

        npx conventional-changelog-cli@v2.1.1 --config "changelog/index.js" -r 2 -o "$notes"

        if [[ "$OSTYPE" == "darwin"* ]]; then
          sed -i '' '/^# /d' "$notes"
        else
          sed -i '/^# /d' "$notes"
        fi

        npx prettier -w "$notes"
        git reset --hard HEAD
      shell: bash

    - uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1

    - env:
        GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
        GORELEASER_KEY: ${{ inputs.goreleaser_key }}
        GITHUB_TOKEN: ${{ inputs.token }}
        COSIGN_PWD: ${{ inputs.cosign_pwd }}
        DOCKER_USERNAME: ${{ inputs.docker_username }}
        DOCKER_PASSWORD: ${{ inputs.docker_password }}
      run: |
        cat "$notes"
        # clean up ory/changelog checkout
        rm -rf changelog

        docker pull --platform linux/amd64 oryd/xgoreleaser:latest
        docker run --privileged --mount type=bind,source="$(pwd)",target=/project \
            --mount type=bind,source="$notes",target=/notes.md \
            --platform linux/amd64 \
            -e GORELEASER_KEY \
            -e GITHUB_TOKEN \
            -e COSIGN_PWD \
            -e DOCKER_USERNAME \
            -e DOCKER_PASSWORD \
            -e GORELEASER_CURRENT_TAG \
            -v /var/run/docker.sock:/var/run/docker.sock \
            oryd/xgoreleaser:latest release --release-header "/notes.md" --rm-dist --timeout 60m

        git add -A
        git stash || true
        git checkout master || true
        git stash pop || true
        git commit -a -m "autogen: update release artifacts" -m "[skip ci]" || true
        git pull origin master --rebase || true
        if [[ "$GITHUB_REF_TYPE" == "branch" ]]; then
          git push origin "${GITHUB_HEAD_REF:-$GITHUB_REF_NAME}" || true
        fi
      shell: bash
    - run: |
        docs_version="$(echo "$GITHUB_REF_NAME" | awk -F'.' '{ printf("%s.%s", $1, $2) }')"
        echo 'DOCS_VERSION='"$docs_version" >> $GITHUB_ENV
      shell: bash
    - run: |
        if [[ $(git describe --tags) == *"pre"* ]]; then
          echo "This is a pre-release, skipping docs publishing."
          exit 0
        fi

        make post-release

        git add -A
        git stash || true
        git checkout master || true
        git pull -ff || true
        git stash pop || true
        git commit --allow-empty -a -m "autogen(docs): generate and bump docs" -m "[skip ci]" || true
        git push origin HEAD:master || true
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        DOCKER_TAG: ${{ github.ref_name }}
      shell: bash
